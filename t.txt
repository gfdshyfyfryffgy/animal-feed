import React, { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { Menu, X } from "lucide-react";

const categories = [
  {
    title: "Chilled",
    color: "text-[#3E3F5B]",
    iconColor: "bg-[#F6F1DE]",
    icon: "ðŸ¥”",
    prefix: "chilled",
    items: [
      { name: "Potato", slug: "potato" },
      { name: "Onion", slug: "onion" },
      { name: "Tomato", slug: "tomato" },
      { name: "Garlic", slug: "garlic" },
      { name: "Rose Onion", slug: "rose-onion" },
      { name: "Shallot Onion", slug: "shallot-onion" },
    ],
  },
  // other categories...
];

export default function Navbar() {
  const [menuOpen, setMenuOpen] = useState(false);
  const [productsHover, setProductsHover] = useState(false);
  const location = useLocation();

  const navItems = [
    { name: "About Us", path: "/about" },
    { name: "Products", path: "/products" },
    { name: "Careers", path: "/Careers" },
    { name: "Contact", path: "/contact" },
  ];

  const isActive = (path) => location.pathname === path;

  return (
    <nav className="w-full bg-white shadow fixed top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
        <h1 className="text-2xl font-bold text-[#3E3F5B]">
          <Link to="/" onClick={() => setMenuOpen(false)}>
            NutriPlanet
          </Link>
        </h1>

        {/* Mobile Menu Button */}
        <div className="md:hidden">
          <button onClick={() => setMenuOpen(!menuOpen)}>
            {menuOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
        </div>

        {/* Desktop Navigation */}
        <ul className="hidden md:flex space-x-6 text-sm font-medium relative">
          {navItems.map((item) => {
            const isProducts = item.name === "Products";
            return (
              <li
                key={item.name}
                className="relative"
                onMouseEnter={isProducts ? () => setProductsHover(true) : undefined}
                onMouseLeave={isProducts ? () => setProductsHover(false) : undefined}
              >
                <Link
                  to={item.path}
                  className={`hover:text-[#8AB2A6] ${
                    isActive(item.path) ? "text-[#8AB2A6] font-semibold" : ""
                  }`}
                >
                  {item.name}
                </Link>

                {/* Products Mega Menu */}
                {isProducts && productsHover && (
                  <div
                    className="absolute left-0 top-full mt-6 w-full max-w-[1200px] overflow-y-auto shadow-2xl border-t border-gray-300 z-50 rounded-2xl bg-white"
                    onMouseEnter={() => setProductsHover(true)}
                    onMouseLeave={() => setProductsHover(false)}
                  >
                    <div className="py-10 px-6">
                      <div className="grid grid-cols-2 md:grid-cols-5 gap-8 text-center">
                        {categories.map((menu, index) => (
                          <div
                            key={index}
                            className={`px-2 ${index !== 0 ? "border-l border-gray-200" : ""}`}
                          >
                            <Link
                              to={`/${menu.prefix}`}
                              onClick={() => setProductsHover(false)}
                              className="flex flex-col items-center cursor-pointer"
                            >
                              <div className={`w-14 h-14 ${menu.iconColor} flex items-center justify-center rounded-full text-2xl`}>
                                {menu.icon}
                              </div>
                              <h4 className={`text-base font-semibold mt-2 ${menu.color}`}>
                                {menu.title}
                              </h4>
                            </Link>
                            <div className="w-8 h-1 mt-1 rounded-full mx-auto" style={{ backgroundColor: "#ACD3A8" }}></div>
                            <ul className="text-sm text-[#3E3F5B] font-medium space-y-1 mt-3 text-center">
                              {menu.items.map((item, i) => (
                                <li key={i}>
                                  <Link
                                    to={`/${menu.prefix}/${item.slug}`}
                                    onClick={() => setProductsHover(false)}
                                    className="block hover:text-[#8AB2A6] transition duration-150 ease-in-out"
                                  >
                                    {item.name}
                                  </Link>
                                </li>
                              ))}
                            </ul>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                )}
              </li>
            );
          })}
        </ul>
      </div>

      {/* Mobile Menu */}
      {menuOpen && (
        <ul className="md:hidden px-4 pb-4 space-y-3 text-sm font-medium bg-white shadow">
          {navItems.map((item) => (
            <li key={item.name}>
              <Link
                to={item.path}
                onClick={() => setMenuOpen(false)}
                className={`block hover:text-[#8AB2A6] ${
                  isActive(item.path) ? "text-[#8AB2A6] font-semibold" : ""
                }`}
              >
                {item.name}
              </Link>
            </li>
          ))}
        </ul>
      )}
    </nav>
  );
}
